<div class="component">
  <div class="title">Memory Minimap</div>
  <div class="memorymap">
    <%
    // how many bytes are drawn before and after a defined address
    const memoryPadding = 24;

    const startAddress=4194304;
    const dataStartAddress=268500992;
    const maxAddress = 4294967295;
    function calculateStart(interval, lastDrawn) {
      let intervalStart = interval.cells[0].address;
      let firstAddr =  intervalStart - memoryPadding; 
      if (firstAddr <= lastDrawn) firstAddr = Math.min(lastDrawn+4, intervalStart);
      return firstAddr;
    }
    function calculateEnd(intervalEnd, nextInterval) {
      let nextIntervalStart = nextInterval ? nextInterval.cells[0].address : maxAddress;
      return Math.min(intervalEnd+memoryPadding, nextIntervalStart-4);
    }
    let lastDrawn=startAddress-4;
    for (let [index, interval] of ctx.memoryIntervals.entries()) {
      let nextInterval = ctx.memoryIntervals[index+1];
      let intervalStart = interval.cells[0].address;
      let intervalEnd = interval.cells[interval.cells.length - 1].address;
      let firstAddr = calculateStart(interval, lastDrawn);
      let lastAddr = calculateEnd(intervalEnd, nextInterval);

      for (let addr = firstAddr; addr <= lastAddr; addr += 4) {
        let cell = interval.cells[(addr-intervalStart)/4];
        if (addr === intervalStart) {%><div class="interval" data-intervalid="<%=interval.id%>" onclick="intervalOnClick(this);"><%}%>
        <div class="cell <%=(addr >= intervalStart && addr <= intervalEnd) ? "active" : ""%> <%=cell && cell.userDefined ? "userDefined": ""%>"
             title="<%=`0x${convert("hex", addr)}`%>"></div>
        <%if (addr === intervalEnd) {%></div><%}
      }
      lastDrawn = lastAddr;
      let nextStart = nextInterval ? calculateStart(nextInterval, lastDrawn) : maxAddress;
      let jumpSize = nextStart - lastDrawn;
      if (jumpSize > memoryPadding) {%>
        <div class="fading <%=(nextInterval != null) ? "mid" : ""%>"
             title="<%=`0x${convert("hex", lastDrawn+4)}..0x${convert("hex", nextStart)}`%>">
          <%for (let i = 0; i <= memoryPadding; i+=4) {%>
            <div class="cell"></div>
          <%}%>
        </div>
      <%lastDrawn += memoryPadding;
      }
    }%>
  </div>
  <div class="buttons">
    <div class="button default" title="Add a custom memory interval" onclick="showFormOnClick('create-memory-interval')">
        <div class="icon gray-4"><%- Icons.render('plus') %></div>
        <div class="label">Add</div>
    </div>
    <div class="button default" title="Edit custom memory intervals" onclick="showFormOnClick('edit-memory-interval')">
        <div class="icon gray-4"><%- Icons.render('edit') %></div>
        <div class="label">Edit</div>
    </div>
  </div>
</div>
